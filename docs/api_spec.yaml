openapi: 3.0.0
info:
    title: Item CRUD Operations API
    version: 1.0.0
    description: |-
        This is a simple restful API application for operating market place.
    contact:
        email: aman@aashvi.net
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
    - url: http://localhost:8080

tags:
    - name: Health
      description: Operations about health
    - name: User
      description: Operations about users
    - name: Items
      description: All purchase able items

paths:
    /health:
        get:
            tags:
                - Health
            summary: Health check
            operationId: getHealth
            responses:
                200:
                    description: Health check
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Health check
    /user/login:
        get:
            security:
                - basicAuth: []
            tags:
                - User
            summary: Retrieve a user with with a given email and password
            operationId: getUser
            responses:
                200:
                    description: Retrieve a user and its bearer token
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                400:
                    description: Data validation error. See response for details.

    /user/register:
        post:
            tags:
                - User
            summary: Create a new user
            operationId: postUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                201:
                    description: The newly created user
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                400:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message
    /user:
        patch:
            tags:
                - User
            security:
                - bearerAuth: []
            summary: Update logged in user information
            operationId: patchUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PartialUser"
            responses:
                200:
                    description: Update logged in user information
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"

        delete:
            tags:
                - User
            security:
                - bearerAuth: []
            summary: Delete logged in user
            operationId: deleteUser
            responses:
                200:
                    description: User can delete himself/herself
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: User deleted successfully
    /items:
        get:
            tags:
                - Items
            summary: Retrieve a list of all items
            operationId: getAllItems
            responses:
                200:
                    description: A list of all items
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Item"
                404:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message
        post:
            tags:
                - Items
            summary: Create a new item
            operationId: postItem
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Item"
            responses:
                201:
                    description: The newly created item
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Item"
                401:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message
                400:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message
    /items/{id}:
        get:
            tags:
                - Items
            summary: Retrieve a specific item by id
            operationId: getItem
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The id of the item to retrieve
                  schema:
                      type: integer
            responses:
                200:
                    description: The requested item
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Item"
                404:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message
        patch:
            tags:
                - Items
            summary: Update a specific item by id
            operationId: patchItem
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The id of the item to update
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PartialItem"
            responses:
                200:
                    description: The updated item
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Item"
                404:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message
        delete:
            tags:
                - Items
            summary: Delete a specific item by id
            operationId: deleteItem
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The id of the item to delete
                  schema:
                      type: integer
            responses:
                200:
                    description: The item has been successfully deleted
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Item deleted successfully
                404:
                    description: Data validation error. See response for details.
                    content:
                        application/json:
                            schema:
                                properties:
                                    message:
                                        type: string
                                        description: Error message

components:
    schemas:
        Item:
            type: object
            required: [name]
            properties:
                id:
                    type: integer
                    description: The id of the item
                owner:
                    type: integer
                    description: The id of the user who created the item
                name:
                    type: string
                    description: The name of the item
                description:
                    type: string
                    default: ""
                    description: The description of the item
                tags:
                    type: array
                    items:
                        type: string
                    default: []
                    description: A list of tags associated with the item
                image:
                    type: string
                    nullable: true
                    default: null
                    description: An image of the item
                ratings:
                    type: array
                    items:
                        type: integer
                    default: []
                    description: A list of ratings given to the item
                price:
                    type: number
                    default: 0
                    description: The price of the item
        PartialItem:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the item
                description:
                    type: string
                    description: The description of the item
                tags:
                    type: array
                    items:
                        type: string
                    description: A list of tags associated with the item
                image:
                    type: string
                    nullable: true
                    description: An image of the item
                ratings:
                    type: array
                    items:
                        type: integer
                    description: A list of ratings given to the item
                price:
                    type: number
                    description: The price of the item
        User:
            type: object
            required: [email, password]
            properties:
                id:
                    type: integer
                    description: Id of the user
                email:
                    type: string
                    description: Email address of the user
                password:
                    type: string
                    description: User password
                name:
                    type: string
                    default: ""
                    description: Name of the user
                address:
                    type: string
                    default: ""
                    description: Address of the user
                phone:
                    type: string
                    default: ""
                    description: Phone number of the user
        PartialUser:
            type: object
            properties:
                password:
                    type: string
                    description: User password
                name:
                    type: string
                    description: Name of the user
                address:
                    type: string
                    description: Address of the user
                phone:
                    type: string
                    description: Phone number of the user

    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
        basicAuth:
            type: http
            scheme: basic
